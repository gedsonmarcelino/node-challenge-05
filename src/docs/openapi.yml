openapi: 3.0.1
info:
  title: Node Challenge 05
  description: "Node Challenge 05 Api, with some descriptions."
  contact:
    email: gedson.marcelino@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:3333
tags:
  - name: user
    description: Everything about users
paths:
  /users:
    post:
      tags:
        - user
      summary: Create an user
      requestBody:
        description: Send name and email to create a new user.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRequestBody"
        required: true
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        400:
          description: Error
          content: {}
    get:
      tags:
        - user
      summary: Get a list of users
      parameters:
        - name: user_id
          in: header
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        400:
          description: Error
          content: {}
  /users/{user_id}/admin:
    patch:
      tags:
        - user
      summary: Change user to admin
      parameters:
        - name: user_id
          in: path
          description: User Id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        404:
          description: Error
          content: {}
  /users/{user_id}:
    get:
      tags:
        - user
      summary: Show user by id
      parameters:
        - name: user_id
          in: path
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        404:
          description: Error
          content: {}
components:
  schemas:
    CreateRequestBody:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        admin:
          type: boolean
        created_at:
          type: string
        updated_at:
          type: string
